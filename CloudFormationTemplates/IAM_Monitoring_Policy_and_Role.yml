AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation IAM_Monitoring_Policy_and_Role: Creates AppDynamics monitoring policy and role.'
Parameters:
  AppDynamicsExternalId:
    #NoEcho: 'true'
    Type: String
    Description: AppDynamics External ID
    MinLength: '2'
    MaxLength: '1224'
    ConstraintDescription: external ID must be between 1 and 1224 characters
  AppDynamicsAccountId:
    #NoEcho: 'true'
    Type: String
    Description: AppDynamics Account ID
    MinLength: '12'
    MaxLength: '12'
    ConstraintDescription: account number must be a 12-digit number that uniquely identifies an AWS account
  AWSIAMRoleName:
    Type: String
    Description: Override default AWS IAM Role name for AppDynamics monitoring
    Default: AppDynamicsMonitoringRole
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: role name must be between 1 and 64 characters
  AWSIAMPolicyName:
    Type: String
    Description: Override default AWS IAM Policy name for AppDynamics monitoring
    Default: AppDynamicsMonitoringPolicy
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: policy name must be between 1 and 64 characters
Resources:
  AppDynamicsMonitoringPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Ref AWSIAMPolicyName
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Sid: AllowMonitoring
          Effect: Allow
          Action:
            - elasticloadbalancing:DescribeLoadBalancers
            - ec2:DescribeInstances
            - cloudwatch:GetMetricData
            - ec2:DescribeVpcs
            - ec2:DescribeRegions
            - ec2:DescribeVolumes
            - elasticloadbalancing:DescribeTargetHealth
            - rds:DescribeDBInstances
            - elasticloadbalancing:DescribeTargetGroups
            - ec2:DescribeSubnets
            - cloudwatch:ListMetrics
            - rds:DescribeDBClusters
          Resource: "*"
  AppDynamicsMonitoringRole:
    Type: 'AWS::IAM::Role'
    DependsOn: AppDynamicsMonitoringPolicy
    Properties:
      RoleName: !Ref AWSIAMRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 
                - '${account_id}'
                - { account_id: !Ref AppDynamicsAccountId }
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref AppDynamicsExternalId
      Path: /
      ManagedPolicyArns:
        - !Ref AppDynamicsMonitoringPolicy
Outputs:
  IAMAWSRoleArn:
    Value: !GetAtt AppDynamicsMonitoringRole.Arn   
    Description: Created AWS IAM Role ARN 